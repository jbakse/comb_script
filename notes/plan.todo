# # # # # # # # # # # # # # # # # # # # # # # # # # 
# New Features (DOCUMENT ME)

- Region Grid `Alternate`
- Boolean Pass
- Trapping
- New, Improved, Gulp. Chrips on errors, Browser Sync hosting and reload. Clean


# # # # # # # # # # # # # # # # # # # # # # # # # # 
# Todo

----- Trapping Experiment.
	Added Trapping property. it looks very promising
	Auto trapping (like auto add trapping to all adds/subtracts) would be cool, but i can't find a way to make it work out, as when two aligned shapes are both added, adding the same trap to both of them won't work (they'll still be aligned to each other).
	----	trap in rectangle draw: trapping probably shouldn't actually effect the region size (as used by children). trapping probably not needed for ellipses. it is meant for tiny tiny adjustments just to fix the boolean bug, not to actually effect design dimensions. (if it would be useful to have another way to spread a shape add that sperately (i don't think it would that helpful))
	----	hardcode trap amount: should trap accept an amount at all? maybe it should be hard coded to .0001px or something. two problems, sometimes trap should be outward, sometimes inward. (maybe trapping: outward, trapping: inward or shrink/expand) second problem. might need different values in different contexts (large values work better, smaller values distort drawing less, i think we can just try some values and see if there is a good general fit)
	----	report bug: even with the trapping the joist example still fails, seems like maybe worth reporting the case

# # # # # # # # # # # # # # # # # # # # # # # # # # 
# Bugs

+-----	all those google drive errors in console!

+----- Proxies are getting the result of math, they are not each calculating for themselves
+----- boolean language files: boolean mixed and mixed_boolean seem to be deprecated but the language spec was not updated figure out wht the system really cares about, and update

+----- mixed unit bug parent_top is a number, so you can't subtract a unit from it.  top = parent_top + 1 cm don't work (probably change parent_top, etc, to units)



# # # # # # # # # # # # # # # # # # # # # # # # # # 
# User facing Features

# General
+-----	Keyboard browser navigation: might need to be disabled, hitting delete or command-brackets is common in an editor and if the wrong thing is focused, you leave the page
	
# Preview
---	Let user Pan
	
	+--- prevent sticky mouse pan
	+--- prevent text selection during pan

---	Let user Zoom
	--- scroll wheel zoom
	+---- keyboard command zoom
	--- tool bar magnifying glass?
	--- option key maginfying glass cursor?
	+---- zoom aware pan

+----	Don't screw up pan on code changes
	
	----	Scroll preview to selected region in text
	
-	Isolation Mode? 
---	Auto Pan and Zoom on code under text cursor?
-	Ghost unselected regions?
--	Click on covered items: right now a large box over small box prevents selection of small box

# Inspector
--	List dimensions in document unit

# Symbols/Mixins
-	Provide .comb specific way to reuse library items: instead of using yaml symbols, something like uses or inherit that pulls properties from another region

# File Management
-	Google Drive Save As?
+-----	Warn on navigation away from dirty file (prompt for sav)

# Math Expression support
	---	Possible Library: http://mathjs.org/docs/expressions/customization.html
	+---	Dimension Units
	---	Access Parent Bounds 
	+--	move evaluation to build/preview
	+--	parse in region also for validation?
	+--	(no)change the 'type' in the language files
	+--	should we rename/limit available variables to expressions)
	----	Make Examples + Document
		+- units
		+- simple math
		- parent boundary variables
		- constants
			- shadowing
			- referencing parent constants, but not own
		+- Mathjs

	----	constants: 
		----	DRY the math.eval stuff to check for input type, report errors, etc consistantly
	+----	Dry Code :(and maybe consider resolving contexts during inital load/parse instead of draw/preview (this will eliminate redundancy))

--	support percents
+---	Basic Maths
+---	Use document units

# Booleans
-	Review: how child_booleans vs self_booleans work, does it make sense?
-	Non-Boolean Paths: flag paths as inellegible for boolean (tries to fill in letters (sutton), letters cause issues in mixed situations, should be able to opt out of mixed booleans)
-	Many to Many: test document

# Syntax
-	Mirror
-	min/max width/height


# Type
-	Single Live vs Wrap
-	Scale?

# Polygon
--	Sizes: should follow provided bounds, maybe make radius optional, maybe consider fit/cover options

# Plugins
-	Vertical Line
-	Horizontal Line
-	Polygon as array of points
+----	Pages Plugin that creates a stack of regions and sticks each child into one. See the hassle of laying out "parts" where thier position isn't actually important.

# SVG
-	SVG Import Support

# Export
---	Export Styles: finish+document
---	Support for Cut vs Etch vs Guide
--	Perserve Groups on Export?: Might at least be worth looking at having the tree represented in groups so they export nested?
--	Include source in exported .svg?


# UI
---	General Look? @Greg
---	Quick Reference: Some sort of context aware reference, listing legal properties/values, tooltips? @Greg

# # # # # # # # # # # # # # # # # # # # # # # # # # 
# Refactoring / Cleanup / Developer facing features

#Build Tool

-----	BUILD DOCS

-----	Don't like the gulp langague task:Language YAMLs: are built with the build tool, should this be handled by the javascript? not sure
--	Browserify Dependencies: rather than script tags, do we want to?

---	Update Libraries

--	Reorg examples
	/yaml + /svg are development/testing files we made to test featuers as we went (needs a cleaner organization)
	/src/examples are the examples available from the ide
	/src/docs/examples are the examples that show up in the api reference

	this orginization just needs total rethinking


# # # # # # # # # # # # # # # # # # # # # # # # # # 
# Developer Docs

--	Prod/Develpment Dependencies, how they are used, where they come from (bower, npm, direct, etc)

--	Project Directories


# # # # # # # # # # # # # # # # # # # # # # # # # # 
# User Docs

-	Document boolean system: whole booelan system really

# # # # # # # # # # # # # # # # # # # # # # # # # # 
# Demo Projects

-	Drawbot
-	T-Slot Box



# # # # # # # # # # # # # # # # # # # # # # # # # # 
# Low Priority ? Wild Ideas

-	Might also be cool if plugin region types could be dynamically loaded from the .comb file "uses http://plugins/polygon.yaml"
-	1 file plugins: Right now, a regiom type (e.g. Rectangle) is added through a two files. a YAML that describes its use, and a js that implements its behavior. it would be cool for (simple) region types to be fully encapsulated in the YAML, kind of a literate approach

-	sibling relative positioning: what are some options? named object relative positioning?

-	combined attributes: margin: 0 or margin: 0 10 20 10

-	nicer dialog (alert/confirm/prompt) with a library
